/*
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Merge.CRMClient.Client;
using Merge.CRMClient.Model;

namespace Merge.CRMClient.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomObjectClassesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMAssociationTypeResponse</returns>
        CRMAssociationTypeResponse CustomObjectClassesAssociationTypesCreate(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMAssociationTypeResponse</returns>
        ApiResponse<CRMAssociationTypeResponse> CustomObjectClassesAssociationTypesCreateWithHttpInfo(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;AssociationType&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedAssociationTypeList</returns>
        PaginatedAssociationTypeList CustomObjectClassesAssociationTypesList(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;AssociationType&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedAssociationTypeList</returns>
        ApiResponse<PaginatedAssociationTypeList> CustomObjectClassesAssociationTypesListWithHttpInfo(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>MetaResponse</returns>
        MetaResponse CustomObjectClassesAssociationTypesMetaPostRetrieve(string xAccountToken, Guid customObjectClassId);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        ApiResponse<MetaResponse> CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>AssociationType</returns>
        AssociationType CustomObjectClassesAssociationTypesRetrieve(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>ApiResponse of AssociationType</returns>
        ApiResponse<AssociationType> CustomObjectClassesAssociationTypesRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;Association&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedAssociationList</returns>
        PaginatedAssociationList CustomObjectClassesCustomObjectsAssociationsList(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;Association&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedAssociationList</returns>
        ApiResponse<PaginatedAssociationList> CustomObjectClassesCustomObjectsAssociationsListWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>Association</returns>
        Association CustomObjectClassesCustomObjectsAssociationsUpdate(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of Association</returns>
        ApiResponse<Association> CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfo(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMCustomObjectResponse</returns>
        CRMCustomObjectResponse CustomObjectClassesCustomObjectsCreate(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMCustomObjectResponse</returns>
        ApiResponse<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsCreateWithHttpInfo(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObject&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedCustomObjectList</returns>
        PaginatedCustomObjectList CustomObjectClassesCustomObjectsList(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObject&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedCustomObjectList</returns>
        ApiResponse<PaginatedCustomObjectList> CustomObjectClassesCustomObjectsListWithHttpInfo(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <returns>MetaResponse</returns>
        MetaResponse CustomObjectClassesCustomObjectsMetaPatchRetrieve(string xAccountToken, Guid customObjectClassId, Guid id);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        ApiResponse<MetaResponse> CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>MetaResponse</returns>
        MetaResponse CustomObjectClassesCustomObjectsMetaPostRetrieve(string xAccountToken, Guid customObjectClassId);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        ApiResponse<MetaResponse> CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId);
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMCustomObjectResponse</returns>
        CRMCustomObjectResponse CustomObjectClassesCustomObjectsPartialUpdate(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMCustomObjectResponse</returns>
        ApiResponse<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <returns>CustomObject</returns>
        CustomObject CustomObjectClassesCustomObjectsRetrieve(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <returns>ApiResponse of CustomObject</returns>
        ApiResponse<CustomObject> CustomObjectClassesCustomObjectsRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CustomObjectClass</returns>
        CustomObjectClass CustomObjectClassesGeneratorUpdate(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CustomObjectClass</returns>
        ApiResponse<CustomObjectClass> CustomObjectClassesGeneratorUpdateWithHttpInfo(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedCustomObjectClassList</returns>
        PaginatedCustomObjectClassList CustomObjectClassesList(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedCustomObjectClassList</returns>
        ApiResponse<PaginatedCustomObjectClassList> CustomObjectClassesListWithHttpInfo(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>CustomObjectClass</returns>
        CustomObjectClass CustomObjectClassesRetrieve(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>ApiResponse of CustomObjectClass</returns>
        ApiResponse<CustomObjectClass> CustomObjectClassesRetrieveWithHttpInfo(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?));
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomObjectClassesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMAssociationTypeResponse</returns>
        System.Threading.Tasks.Task<CRMAssociationTypeResponse> CustomObjectClassesAssociationTypesCreateAsync(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMAssociationTypeResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CRMAssociationTypeResponse>> CustomObjectClassesAssociationTypesCreateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;AssociationType&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedAssociationTypeList</returns>
        System.Threading.Tasks.Task<PaginatedAssociationTypeList> CustomObjectClassesAssociationTypesListAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;AssociationType&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedAssociationTypeList)</returns>
        System.Threading.Tasks.Task<ApiResponse<PaginatedAssociationTypeList>> CustomObjectClassesAssociationTypesListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesAssociationTypesMetaPostRetrieveAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MetaResponse>> CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AssociationType</returns>
        System.Threading.Tasks.Task<AssociationType> CustomObjectClassesAssociationTypesRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AssociationType)</returns>
        System.Threading.Tasks.Task<ApiResponse<AssociationType>> CustomObjectClassesAssociationTypesRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;Association&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedAssociationList</returns>
        System.Threading.Tasks.Task<PaginatedAssociationList> CustomObjectClassesCustomObjectsAssociationsListAsync(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;Association&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedAssociationList)</returns>
        System.Threading.Tasks.Task<ApiResponse<PaginatedAssociationList>> CustomObjectClassesCustomObjectsAssociationsListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Association</returns>
        System.Threading.Tasks.Task<Association> CustomObjectClassesCustomObjectsAssociationsUpdateAsync(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Association)</returns>
        System.Threading.Tasks.Task<ApiResponse<Association>> CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfoAsync(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMCustomObjectResponse</returns>
        System.Threading.Tasks.Task<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsCreateAsync(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMCustomObjectResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CRMCustomObjectResponse>> CustomObjectClassesCustomObjectsCreateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObject&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedCustomObjectList</returns>
        System.Threading.Tasks.Task<PaginatedCustomObjectList> CustomObjectClassesCustomObjectsListAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObject&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedCustomObjectList)</returns>
        System.Threading.Tasks.Task<ApiResponse<PaginatedCustomObjectList>> CustomObjectClassesCustomObjectsListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesCustomObjectsMetaPatchRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MetaResponse>> CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesCustomObjectsMetaPostRetrieveAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<MetaResponse>> CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMCustomObjectResponse</returns>
        System.Threading.Tasks.Task<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsPartialUpdateAsync(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMCustomObjectResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<CRMCustomObjectResponse>> CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObject</returns>
        System.Threading.Tasks.Task<CustomObject> CustomObjectClassesCustomObjectsRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObject)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomObject>> CustomObjectClassesCustomObjectsRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObjectClass</returns>
        System.Threading.Tasks.Task<CustomObjectClass> CustomObjectClassesGeneratorUpdateAsync(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObjectClass)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomObjectClass>> CustomObjectClassesGeneratorUpdateWithHttpInfoAsync(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedCustomObjectClassList</returns>
        System.Threading.Tasks.Task<PaginatedCustomObjectClassList> CustomObjectClassesListAsync(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedCustomObjectClassList)</returns>
        System.Threading.Tasks.Task<ApiResponse<PaginatedCustomObjectClassList>> CustomObjectClassesListWithHttpInfoAsync(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObjectClass</returns>
        System.Threading.Tasks.Task<CustomObjectClass> CustomObjectClassesRetrieveAsync(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>
        /// Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </remarks>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObjectClass)</returns>
        System.Threading.Tasks.Task<ApiResponse<CustomObjectClass>> CustomObjectClassesRetrieveWithHttpInfoAsync(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ICustomObjectClassesApi : ICustomObjectClassesApiSync, ICustomObjectClassesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class CustomObjectClassesApi : ICustomObjectClassesApi
    {
        private Merge.CRMClient.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomObjectClassesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CustomObjectClassesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomObjectClassesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public CustomObjectClassesApi(String basePath)
        {
            this.Configuration = Merge.CRMClient.Client.Configuration.MergeConfigurations(
                Merge.CRMClient.Client.GlobalConfiguration.Instance,
                new Merge.CRMClient.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Merge.CRMClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Merge.CRMClient.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Merge.CRMClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomObjectClassesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public CustomObjectClassesApi(Merge.CRMClient.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Merge.CRMClient.Client.Configuration.MergeConfigurations(
                Merge.CRMClient.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Merge.CRMClient.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Merge.CRMClient.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Merge.CRMClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomObjectClassesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public CustomObjectClassesApi(Merge.CRMClient.Client.ISynchronousClient client, Merge.CRMClient.Client.IAsynchronousClient asyncClient, Merge.CRMClient.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Merge.CRMClient.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Merge.CRMClient.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Merge.CRMClient.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Merge.CRMClient.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Merge.CRMClient.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        ///  Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMAssociationTypeResponse</returns>
        public CRMAssociationTypeResponse CustomObjectClassesAssociationTypesCreate(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CRMAssociationTypeResponse> localVarResponse = CustomObjectClassesAssociationTypesCreateWithHttpInfo(xAccountToken, customObjectClassId, cRMAssociationTypeEndpointRequest, isDebugMode, runAsync);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMAssociationTypeResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<CRMAssociationTypeResponse> CustomObjectClassesAssociationTypesCreateWithHttpInfo(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesCreate");

            // verify the required parameter 'cRMAssociationTypeEndpointRequest' is set
            if (cRMAssociationTypeEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'cRMAssociationTypeEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesCreate");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = cRMAssociationTypeEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<CRMAssociationTypeResponse>("/custom-object-classes/{custom_object_class_id}/association-types", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesCreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMAssociationTypeResponse</returns>
        public async System.Threading.Tasks.Task<CRMAssociationTypeResponse> CustomObjectClassesAssociationTypesCreateAsync(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CRMAssociationTypeResponse> localVarResponse = await CustomObjectClassesAssociationTypesCreateWithHttpInfoAsync(xAccountToken, customObjectClassId, cRMAssociationTypeEndpointRequest, isDebugMode, runAsync, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates an &#x60;AssociationType&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMAssociationTypeEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMAssociationTypeResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CRMAssociationTypeResponse>> CustomObjectClassesAssociationTypesCreateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, CRMAssociationTypeEndpointRequest cRMAssociationTypeEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesCreate");

            // verify the required parameter 'cRMAssociationTypeEndpointRequest' is set
            if (cRMAssociationTypeEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'cRMAssociationTypeEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesCreate");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = cRMAssociationTypeEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<CRMAssociationTypeResponse>("/custom-object-classes/{custom_object_class_id}/association-types", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesCreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;AssociationType&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedAssociationTypeList</returns>
        public PaginatedAssociationTypeList CustomObjectClassesAssociationTypesList(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedAssociationTypeList> localVarResponse = CustomObjectClassesAssociationTypesListWithHttpInfo(xAccountToken, customObjectClassId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;AssociationType&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedAssociationTypeList</returns>
        public Merge.CRMClient.Client.ApiResponse<PaginatedAssociationTypeList> CustomObjectClassesAssociationTypesListWithHttpInfo(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesList");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PaginatedAssociationTypeList>("/custom-object-classes/{custom_object_class_id}/association-types", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;AssociationType&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedAssociationTypeList</returns>
        public async System.Threading.Tasks.Task<PaginatedAssociationTypeList> CustomObjectClassesAssociationTypesListAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedAssociationTypeList> localVarResponse = await CustomObjectClassesAssociationTypesListWithHttpInfoAsync(xAccountToken, customObjectClassId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;AssociationType&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedAssociationTypeList)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<PaginatedAssociationTypeList>> CustomObjectClassesAssociationTypesListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesList");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<PaginatedAssociationTypeList>("/custom-object-classes/{custom_object_class_id}/association-types", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>MetaResponse</returns>
        public MetaResponse CustomObjectClassesAssociationTypesMetaPostRetrieve(string xAccountToken, Guid customObjectClassId)
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfo(xAccountToken, customObjectClassId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<MetaResponse> CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId)
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesMetaPostRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<MetaResponse>("/custom-object-classes/{custom_object_class_id}/association-types/meta/post", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesMetaPostRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        public async System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesAssociationTypesMetaPostRetrieveAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = await CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfoAsync(xAccountToken, customObjectClassId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMAssociationType&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<MetaResponse>> CustomObjectClassesAssociationTypesMetaPostRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesMetaPostRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<MetaResponse>("/custom-object-classes/{custom_object_class_id}/association-types/meta/post", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesMetaPostRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>AssociationType</returns>
        public AssociationType CustomObjectClassesAssociationTypesRetrieve(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<AssociationType> localVarResponse = CustomObjectClassesAssociationTypesRetrieveWithHttpInfo(xAccountToken, customObjectClassId, id, includeRemoteData);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>ApiResponse of AssociationType</returns>
        public Merge.CRMClient.Client.ApiResponse<AssociationType> CustomObjectClassesAssociationTypesRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<AssociationType>("/custom-object-classes/{custom_object_class_id}/association-types/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AssociationType</returns>
        public async System.Threading.Tasks.Task<AssociationType> CustomObjectClassesAssociationTypesRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<AssociationType> localVarResponse = await CustomObjectClassesAssociationTypesRetrieveWithHttpInfoAsync(xAccountToken, customObjectClassId, id, includeRemoteData, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns an &#x60;AssociationType&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AssociationType)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<AssociationType>> CustomObjectClassesAssociationTypesRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesAssociationTypesRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<AssociationType>("/custom-object-classes/{custom_object_class_id}/association-types/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesAssociationTypesRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;Association&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedAssociationList</returns>
        public PaginatedAssociationList CustomObjectClassesCustomObjectsAssociationsList(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedAssociationList> localVarResponse = CustomObjectClassesCustomObjectsAssociationsListWithHttpInfo(xAccountToken, customObjectClassId, objectId, associationTypeId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;Association&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedAssociationList</returns>
        public Merge.CRMClient.Client.ApiResponse<PaginatedAssociationList> CustomObjectClassesCustomObjectsAssociationsListWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsList");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(objectId)); // path parameter
            if (associationTypeId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "association_type_id", associationTypeId));
            }
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PaginatedAssociationList>("/custom-object-classes/{custom_object_class_id}/custom-objects/{object_id}/associations", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsAssociationsList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;Association&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedAssociationList</returns>
        public async System.Threading.Tasks.Task<PaginatedAssociationList> CustomObjectClassesCustomObjectsAssociationsListAsync(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedAssociationList> localVarResponse = await CustomObjectClassesCustomObjectsAssociationsListWithHttpInfoAsync(xAccountToken, customObjectClassId, objectId, associationTypeId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;Association&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="objectId"></param>
        /// <param name="associationTypeId">If provided, will only return opportunities with this association_type. (optional)</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedAssociationList)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<PaginatedAssociationList>> CustomObjectClassesCustomObjectsAssociationsListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid objectId, string associationTypeId = default(string), DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsList");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(objectId)); // path parameter
            if (associationTypeId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "association_type_id", associationTypeId));
            }
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<PaginatedAssociationList>("/custom-object-classes/{custom_object_class_id}/custom-objects/{object_id}/associations", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsAssociationsList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>Association</returns>
        public Association CustomObjectClassesCustomObjectsAssociationsUpdate(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<Association> localVarResponse = CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfo(xAccountToken, associationTypeId, sourceClassId, sourceObjectId, targetClassId, targetObjectId, isDebugMode, runAsync);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of Association</returns>
        public Merge.CRMClient.Client.ApiResponse<Association> CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfo(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsUpdate");

            // verify the required parameter 'targetClassId' is set
            if (targetClassId == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'targetClassId' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsUpdate");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("association_type_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(associationTypeId)); // path parameter
            localVarRequestOptions.PathParameters.Add("source_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(sourceClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("source_object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(sourceObjectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("target_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(targetClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("target_object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(targetObjectId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<Association>("/custom-object-classes/{source_class_id}/custom-objects/{source_object_id}/associations/{target_class_id}/{target_object_id}/{association_type_id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsAssociationsUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Association</returns>
        public async System.Threading.Tasks.Task<Association> CustomObjectClassesCustomObjectsAssociationsUpdateAsync(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<Association> localVarResponse = await CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfoAsync(xAccountToken, associationTypeId, sourceClassId, sourceObjectId, targetClassId, targetObjectId, isDebugMode, runAsync, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="associationTypeId"></param>
        /// <param name="sourceClassId"></param>
        /// <param name="sourceObjectId"></param>
        /// <param name="targetClassId"></param>
        /// <param name="targetObjectId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Association)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<Association>> CustomObjectClassesCustomObjectsAssociationsUpdateWithHttpInfoAsync(string xAccountToken, Guid associationTypeId, Guid sourceClassId, Guid sourceObjectId, string targetClassId, Guid targetObjectId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsUpdate");

            // verify the required parameter 'targetClassId' is set
            if (targetClassId == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'targetClassId' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsAssociationsUpdate");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("association_type_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(associationTypeId)); // path parameter
            localVarRequestOptions.PathParameters.Add("source_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(sourceClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("source_object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(sourceObjectId)); // path parameter
            localVarRequestOptions.PathParameters.Add("target_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(targetClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("target_object_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(targetObjectId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<Association>("/custom-object-classes/{source_class_id}/custom-objects/{source_object_id}/associations/{target_class_id}/{target_object_id}/{association_type_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsAssociationsUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMCustomObjectResponse</returns>
        public CRMCustomObjectResponse CustomObjectClassesCustomObjectsCreate(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> localVarResponse = CustomObjectClassesCustomObjectsCreateWithHttpInfo(xAccountToken, customObjectClassId, cRMCustomObjectEndpointRequest, isDebugMode, runAsync);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMCustomObjectResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsCreateWithHttpInfo(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsCreate");

            // verify the required parameter 'cRMCustomObjectEndpointRequest' is set
            if (cRMCustomObjectEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'cRMCustomObjectEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsCreate");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = cRMCustomObjectEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<CRMCustomObjectResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsCreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMCustomObjectResponse</returns>
        public async System.Threading.Tasks.Task<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsCreateAsync(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> localVarResponse = await CustomObjectClassesCustomObjectsCreateWithHttpInfoAsync(xAccountToken, customObjectClassId, cRMCustomObjectEndpointRequest, isDebugMode, runAsync, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Creates a &#x60;CustomObject&#x60; object with the given values.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMCustomObjectResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse>> CustomObjectClassesCustomObjectsCreateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, CRMCustomObjectEndpointRequest cRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsCreate");

            // verify the required parameter 'cRMCustomObjectEndpointRequest' is set
            if (cRMCustomObjectEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'cRMCustomObjectEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsCreate");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = cRMCustomObjectEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PostAsync<CRMCustomObjectResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsCreate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObject&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedCustomObjectList</returns>
        public PaginatedCustomObjectList CustomObjectClassesCustomObjectsList(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectList> localVarResponse = CustomObjectClassesCustomObjectsListWithHttpInfo(xAccountToken, customObjectClassId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, includeRemoteFields, modifiedAfter, modifiedBefore, pageSize, remoteId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObject&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedCustomObjectList</returns>
        public Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectList> CustomObjectClassesCustomObjectsListWithHttpInfo(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsList");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (includeRemoteFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_fields", includeRemoteFields));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PaginatedCustomObjectList>("/custom-object-classes/{custom_object_class_id}/custom-objects", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObject&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedCustomObjectList</returns>
        public async System.Threading.Tasks.Task<PaginatedCustomObjectList> CustomObjectClassesCustomObjectsListAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectList> localVarResponse = await CustomObjectClassesCustomObjectsListWithHttpInfoAsync(xAccountToken, customObjectClassId, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, includeRemoteFields, modifiedAfter, modifiedBefore, pageSize, remoteId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObject&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedCustomObjectList)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectList>> CustomObjectClassesCustomObjectsListWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsList");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (includeRemoteFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_fields", includeRemoteFields));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<PaginatedCustomObjectList>("/custom-object-classes/{custom_object_class_id}/custom-objects", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <returns>MetaResponse</returns>
        public MetaResponse CustomObjectClassesCustomObjectsMetaPatchRetrieve(string xAccountToken, Guid customObjectClassId, Guid id)
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfo(xAccountToken, customObjectClassId, id);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<MetaResponse> CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id)
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsMetaPatchRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<MetaResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/meta/patch/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsMetaPatchRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        public async System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesCustomObjectsMetaPatchRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = await CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfoAsync(xAccountToken, customObjectClassId, id, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; PATCHs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<MetaResponse>> CustomObjectClassesCustomObjectsMetaPatchRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsMetaPatchRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<MetaResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/meta/patch/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsMetaPatchRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>MetaResponse</returns>
        public MetaResponse CustomObjectClassesCustomObjectsMetaPostRetrieve(string xAccountToken, Guid customObjectClassId)
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfo(xAccountToken, customObjectClassId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <returns>ApiResponse of MetaResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<MetaResponse> CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId)
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsMetaPostRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<MetaResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/meta/post", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsMetaPostRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of MetaResponse</returns>
        public async System.Threading.Tasks.Task<MetaResponse> CustomObjectClassesCustomObjectsMetaPostRetrieveAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<MetaResponse> localVarResponse = await CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfoAsync(xAccountToken, customObjectClassId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns metadata for &#x60;CRMCustomObject&#x60; POSTs.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (MetaResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<MetaResponse>> CustomObjectClassesCustomObjectsMetaPostRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsMetaPostRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<MetaResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/meta/post", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsMetaPostRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CRMCustomObjectResponse</returns>
        public CRMCustomObjectResponse CustomObjectClassesCustomObjectsPartialUpdate(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> localVarResponse = CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfo(xAccountToken, customObjectClassId, id, patchedCRMCustomObjectEndpointRequest, isDebugMode, runAsync);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CRMCustomObjectResponse</returns>
        public Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsPartialUpdate");

            // verify the required parameter 'patchedCRMCustomObjectEndpointRequest' is set
            if (patchedCRMCustomObjectEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'patchedCRMCustomObjectEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsPartialUpdate");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json",
                "application/x-www-form-urlencoded",
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = patchedCRMCustomObjectEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<CRMCustomObjectResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsPartialUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CRMCustomObjectResponse</returns>
        public async System.Threading.Tasks.Task<CRMCustomObjectResponse> CustomObjectClassesCustomObjectsPartialUpdateAsync(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse> localVarResponse = await CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfoAsync(xAccountToken, customObjectClassId, id, patchedCRMCustomObjectEndpointRequest, isDebugMode, runAsync, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="patchedCRMCustomObjectEndpointRequest"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CRMCustomObjectResponse)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CRMCustomObjectResponse>> CustomObjectClassesCustomObjectsPartialUpdateWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, PatchedCRMCustomObjectEndpointRequest patchedCRMCustomObjectEndpointRequest, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsPartialUpdate");

            // verify the required parameter 'patchedCRMCustomObjectEndpointRequest' is set
            if (patchedCRMCustomObjectEndpointRequest == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'patchedCRMCustomObjectEndpointRequest' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsPartialUpdate");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
                "application/json", 
                "application/x-www-form-urlencoded", 
                "multipart/form-data"
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter
            localVarRequestOptions.Data = patchedCRMCustomObjectEndpointRequest;

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PatchAsync<CRMCustomObjectResponse>("/custom-object-classes/{custom_object_class_id}/custom-objects/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsPartialUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <returns>CustomObject</returns>
        public CustomObject CustomObjectClassesCustomObjectsRetrieve(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObject> localVarResponse = CustomObjectClassesCustomObjectsRetrieveWithHttpInfo(xAccountToken, customObjectClassId, id, includeRemoteData, includeRemoteFields);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <returns>ApiResponse of CustomObject</returns>
        public Merge.CRMClient.Client.ApiResponse<CustomObject> CustomObjectClassesCustomObjectsRetrieveWithHttpInfo(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (includeRemoteFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_fields", includeRemoteFields));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<CustomObject>("/custom-object-classes/{custom_object_class_id}/custom-objects/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObject</returns>
        public async System.Threading.Tasks.Task<CustomObject> CustomObjectClassesCustomObjectsRetrieveAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObject> localVarResponse = await CustomObjectClassesCustomObjectsRetrieveWithHttpInfoAsync(xAccountToken, customObjectClassId, id, includeRemoteData, includeRemoteFields, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObject&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="customObjectClassId"></param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="includeRemoteFields">Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObject)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CustomObject>> CustomObjectClassesCustomObjectsRetrieveWithHttpInfoAsync(string xAccountToken, Guid customObjectClassId, Guid id, bool? includeRemoteData = default(bool?), bool? includeRemoteFields = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesCustomObjectsRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("custom_object_class_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(customObjectClassId)); // path parameter
            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (includeRemoteFields != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_fields", includeRemoteFields));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<CustomObject>("/custom-object-classes/{custom_object_class_id}/custom-objects/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesCustomObjectsRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>CustomObjectClass</returns>
        public CustomObjectClass CustomObjectClassesGeneratorUpdate(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObjectClass> localVarResponse = CustomObjectClassesGeneratorUpdateWithHttpInfo(xAccountToken, generatorId, isDebugMode, runAsync);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <returns>ApiResponse of CustomObjectClass</returns>
        public Merge.CRMClient.Client.ApiResponse<CustomObjectClass> CustomObjectClassesGeneratorUpdateWithHttpInfo(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesGeneratorUpdate");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("generator_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(generatorId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<CustomObjectClass>("/custom-object-classes/generator/{generator_id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesGeneratorUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObjectClass</returns>
        public async System.Threading.Tasks.Task<CustomObjectClass> CustomObjectClassesGeneratorUpdateAsync(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObjectClass> localVarResponse = await CustomObjectClassesGeneratorUpdateWithHttpInfoAsync(xAccountToken, generatorId, isDebugMode, runAsync, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Updates a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="generatorId"></param>
        /// <param name="isDebugMode">Whether to include debug fields (such as log file links) in the response. (optional)</param>
        /// <param name="runAsync">Whether or not third-party updates should be run asynchronously. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObjectClass)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CustomObjectClass>> CustomObjectClassesGeneratorUpdateWithHttpInfoAsync(string xAccountToken, Guid generatorId, bool? isDebugMode = default(bool?), bool? runAsync = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesGeneratorUpdate");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("generator_id", Merge.CRMClient.Client.ClientUtils.ParameterToString(generatorId)); // path parameter
            if (isDebugMode != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "is_debug_mode", isDebugMode));
            }
            if (runAsync != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "run_async", runAsync));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.PutAsync<CustomObjectClass>("/custom-object-classes/generator/{generator_id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesGeneratorUpdate", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>PaginatedCustomObjectClassList</returns>
        public PaginatedCustomObjectClassList CustomObjectClassesList(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectClassList> localVarResponse = CustomObjectClassesListWithHttpInfo(xAccountToken, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <returns>ApiResponse of PaginatedCustomObjectClassList</returns>
        public Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectClassList> CustomObjectClassesListWithHttpInfo(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesList");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PaginatedCustomObjectClassList>("/custom-object-classes", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PaginatedCustomObjectClassList</returns>
        public async System.Threading.Tasks.Task<PaginatedCustomObjectClassList> CustomObjectClassesListAsync(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectClassList> localVarResponse = await CustomObjectClassesListWithHttpInfoAsync(xAccountToken, createdAfter, createdBefore, cursor, includeDeletedData, includeRemoteData, modifiedAfter, modifiedBefore, pageSize, remoteId, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a list of &#x60;CustomObjectClass&#x60; objects.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="createdAfter">If provided, will only return objects created after this datetime. (optional)</param>
        /// <param name="createdBefore">If provided, will only return objects created before this datetime. (optional)</param>
        /// <param name="cursor">The pagination cursor value. (optional)</param>
        /// <param name="includeDeletedData">Whether to include data that was marked as deleted by third party webhooks. (optional)</param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="modifiedAfter">If provided, will only return objects modified after this datetime. (optional)</param>
        /// <param name="modifiedBefore">If provided, will only return objects modified before this datetime. (optional)</param>
        /// <param name="pageSize">Number of results to return per page. (optional)</param>
        /// <param name="remoteId">The API provider&#39;s ID for the given object. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PaginatedCustomObjectClassList)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<PaginatedCustomObjectClassList>> CustomObjectClassesListWithHttpInfoAsync(string xAccountToken, DateTime? createdAfter = default(DateTime?), DateTime? createdBefore = default(DateTime?), string cursor = default(string), bool? includeDeletedData = default(bool?), bool? includeRemoteData = default(bool?), DateTime? modifiedAfter = default(DateTime?), DateTime? modifiedBefore = default(DateTime?), int? pageSize = default(int?), string remoteId = default(string), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesList");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            if (createdAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_after", createdAfter));
            }
            if (createdBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "created_before", createdBefore));
            }
            if (cursor != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "cursor", cursor));
            }
            if (includeDeletedData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_deleted_data", includeDeletedData));
            }
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            if (modifiedAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_after", modifiedAfter));
            }
            if (modifiedBefore != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "modified_before", modifiedBefore));
            }
            if (pageSize != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "page_size", pageSize));
            }
            if (remoteId != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "remote_id", remoteId));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<PaginatedCustomObjectClassList>("/custom-object-classes", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesList", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>CustomObjectClass</returns>
        public CustomObjectClass CustomObjectClassesRetrieve(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObjectClass> localVarResponse = CustomObjectClassesRetrieveWithHttpInfo(xAccountToken, id, includeRemoteData);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <returns>ApiResponse of CustomObjectClass</returns>
        public Merge.CRMClient.Client.ApiResponse<CustomObjectClass> CustomObjectClassesRetrieveWithHttpInfo(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesRetrieve");

            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<CustomObjectClass>("/custom-object-classes/{id}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of CustomObjectClass</returns>
        public async System.Threading.Tasks.Task<CustomObjectClass> CustomObjectClassesRetrieveAsync(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Merge.CRMClient.Client.ApiResponse<CustomObjectClass> localVarResponse = await CustomObjectClassesRetrieveWithHttpInfoAsync(xAccountToken, id, includeRemoteData, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///  Returns a &#x60;CustomObjectClass&#x60; object with the given &#x60;id&#x60;.
        /// </summary>
        /// <exception cref="Merge.CRMClient.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xAccountToken">Token identifying the end user.</param>
        /// <param name="id"></param>
        /// <param name="includeRemoteData">Whether to include the original data Merge fetched from the third-party to produce these models. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (CustomObjectClass)</returns>
        public async System.Threading.Tasks.Task<Merge.CRMClient.Client.ApiResponse<CustomObjectClass>> CustomObjectClassesRetrieveWithHttpInfoAsync(string xAccountToken, Guid id, bool? includeRemoteData = default(bool?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xAccountToken' is set
            if (xAccountToken == null)
                throw new Merge.CRMClient.Client.ApiException(400, "Missing required parameter 'xAccountToken' when calling CustomObjectClassesApi->CustomObjectClassesRetrieve");


            Merge.CRMClient.Client.RequestOptions localVarRequestOptions = new Merge.CRMClient.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Merge.CRMClient.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Merge.CRMClient.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("id", Merge.CRMClient.Client.ClientUtils.ParameterToString(id)); // path parameter
            if (includeRemoteData != null)
            {
                localVarRequestOptions.QueryParameters.Add(Merge.CRMClient.Client.ClientUtils.ParameterToMultiMap("", "include_remote_data", includeRemoteData));
            }
            localVarRequestOptions.HeaderParameters.Add("X-Account-Token", Merge.CRMClient.Client.ClientUtils.ParameterToString(xAccountToken)); // header parameter

            // authentication (tokenAuth) required
            if (!String.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<CustomObjectClass>("/custom-object-classes/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CustomObjectClassesRetrieve", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
